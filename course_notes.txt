/// ** COURSE NOTES ** ///


----------------------
| DJANGO SETUP STUFF |
---------------------------------------------------------------
in project folder:
  django-admin startproject first_project .
  ** that creates a first_project package inside a first_project project
  ** The period . is crucial because it tells the script to install Django in your current directory

---------------------------------------------------------------


-------------------
| manage.py STUFF |
---------------------------------------------------------------
must add this to manage.py file:
  sys.path.append('/Users/micahbeckman/codeprojects/udemy-django/djangoenv/lib/python3.7/site-packages')

---------------------------------------------------------------


--------------------
| settings.py STUFF |
---------------------------------------------------------------
must add this to INSTALLED_APPS list:
  '<app_name>'

---------------------------------------------------------------


---------------------
| URL MAPPING STUFF |
---------------------------------------------------------------
1) import views from the application:
  from <app_name> import views
2) add to the urlpatterns list:
  path('<routing>', views.<function_name>, name='<ref_name>')

to extend the project to include multiple apps:
  1) make a new urls.py file in the app folder
  2) add: from django.urls import path & from . import views
  3) add: urlpatterns = [path('first_app/', include('first_app.urls')), ...]
  ** this is the indicator to look into a specific app folder
  ** www.domainname.com/first_app/
  ** the project will import all the mappings from the app

---------------------------------------------------------------


------------------------
| RUNNING DJANGO STUFF |
---------------------------------------------------------------
in project folder:
  python manage.py runserver
  ** starts dev server at http://127.0.0.1:8000/

to create a new application:
  python manage.py startapp first_app
---------------------------------------------------------------


--------------------
| APP FOLDER STUFF |
---------------------------------------------------------------
all of this is autogenerated when starting a project and initializing an app:
project_name
  app_name
    migrations --> directory that stores DB-specific info as it relates to models
    __init__.py --> so python knows it's a package
    admin.py --> used to register models
    apps.py --> place for application-specific configurations
    models.py --> place to store the application's data
    tests.py --> place to store test functions
    views.py --> place to store functions that handle requests and return responses
  project_name
    __init__.py --> so python knows it's a package
    settings.py --> list of apps, security stuff, debug option, etc.
    urls.py --> list of routes
    wsgi.py --> no idea what this is
  db.sqlite3 --> db file when using sqlite3 (default)
  manage.py --> the "main" called to start the server (runserver)
---------------------------------------------------------------


-------------
| GIT STUFF |
---------------------------------------------------------------
to pull a project to a new instance of git on a new machine:
  git pull https://github.com/micahdanger/udemy-django master

to get the master branch on a machine:
  git checkout master

atom will let you fetch changes to master from github
---------------------------------------------------------------


------------------------
| PIP/VIRTUALENV STUFF |
---------------------------------------------------------------
in project folder:
  virtualenv --relocatable <project_name>
  ** sets up virtual environment
  ** makes it relocatable with relative paths

to run:
  source <environment_name>/bin/activate
  ** starts the virtual environment

to stop:
  deactivate
  ** stops the virtual environment

to gather project requirements:
  pip freeze --local > requirements.txt
  ** makes a file with package requirements listed

to remove a virtual environment:
  rm -rf <venv_name>/

to install using requirements.txt file:
  pip install -r requirements.txt
---------------------------------------------------------------
